package com.slabs.insight.services;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.slabs.insight.domain.Employee;

@RunWith(SpringRunner.class)
@SpringBootTest
public class EmployeeServiceImplIntegrationTest {

	private static final Logger LOGGER = LoggerFactory.getLogger(EmployeeServiceImplIntegrationTest.class.getName());

	@Autowired
	EmployeeService employeeService;

	@Before
	public void setup() {
		//
	}


	@Test
	public void testCreateGetAndDeleteEmployeeHappyPath() {
		
		// data setup
		Employee employee = new Employee();
		employee.setFirstName("Alex");
		employee.setLastName("Plex");
		employee.setLocation("Sydney");
		
		Employee emp = employeeService.createEmployee(employee);
		
		LOGGER.info("Find employee having employeeId=" + emp.getEmployeeId());

		// Get The record from Database
		Employee employee1 = employeeService.getEmployee(emp.getEmployeeId());

		assertNotNull(employee1);
		
		// Delete data generated by test
		employeeService.deleteEmployee(employee1.getEmployeeId());
	}

	@Test
	public void testUpdateEmployeeHappyPath() {

		// data setup
		Employee testEmployee = new Employee();
		Employee employee = employeeService.createEmployee(testEmployee);

		LOGGER.info("Employee firstName before Update: " + employee.getFirstName());
		LOGGER.info("Employee lastName before Update: " + employee.getLastName());
		
		employee.setFirstName("AB");
		employee.setLastName("Deviliers");
		employee.setLocation("Johannesburg");
		
		// TEST METHOD 
		Employee updatedEmployee = employeeService.updateEmployee(employee);

		LOGGER.info("Employee firstName after Update: " + updatedEmployee.getFirstName());
		LOGGER.info("Employee lastName after Update: " + updatedEmployee.getLastName());
		
		// validate output
		assertNotNull(updatedEmployee);
		assertEquals(employee.getFirstName(), updatedEmployee.getFirstName());
		
		// Delete Employee
		// TearDown - Delete data generated by test
		employeeService.deleteEmployee(employee.getEmployeeId());
	}

	@Test
	public void testGetAllEmployees() {

		// Create Employee so that we can delete
		List<Employee> lstEmployees = employeeService.getAllEmployees();
		
		// validate output
		assertTrue(lstEmployees.size()>0);
	}

}
